@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

@mixin element-indent($pad-map, $indent-type, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $padding in $pad-map {
    @if $fs-breakpoint == null {
      @include make-element-indents($padding, $indent-type);
    }
    @else {
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-element-indents($padding, $indent-type);
      }
    }
  }
}

@mixin make-font-size($fs-font-size) {
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
    @if (length($fs-font-size) > 2) {
      letter-spacing: nth($fs-font-size, 3);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}

@mixin make-element-indents($elt-padding, $indent-type) {
  @if type-of($elt-padding) == "list" {
    @if (length($elt-padding) == 2) {
      #{$indent-type}: nth($elt-padding, 1) nth($elt-padding, 2);
    }
    @if (length($elt-padding) == 3) {
      #{$indent-type}: nth($elt-padding, 1) nth($elt-padding, 2) nth($elt-padding, 3);
    }
    @if (length($elt-padding) == 4) {
      #{$indent-type}: nth($elt-padding, 1) nth($elt-padding, 2) nth($elt-padding, 3) nth($elt-padding, 4);
    }
  }
  @else {
    #{$indent-type}: nth($elt-padding, 1);
  }
}

@mixin  text-hover-effect {
  cursor: pointer;
  color: nth($accent3, 4);
}

@mixin svg-hover-effect {
  cursor: pointer;

  path {
    fill: $hover-color;
  }
}

@mixin for-collapsed-content {
  overflow:hidden;
  transition:height 0.15s ease-out;
}

@mixin delimiter {
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  content: '';
  width: 100%;
  height: 1.5px;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 2px;
}

@mixin delimiter-before {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  content: '';
  width: 100%;
  height: 1.5px;
  background: rgba(0, 0, 0, 0.05);
  border-radius: 2px;
}

@mixin indents($classname, $propertyname, $ind-map) {
  @include make-indents($classname, $propertyname);
  @each $ind-breakpoint, $ind-value in $ind-map {
    @media screen and (min-width: nth($ind-value, 1)) {
      @include make-indents($classname, $propertyname, nth($ind-value, 2));
    }
  }
}

$max: 50;
$offset: 5;
$unit: 'px'; 

@mixin make-indents($classname, $propertyname, $suffix: '')  {
  $i: 0;
  @while $i <= $max {
    #{$classname + $suffix + $i} { 
      #{$propertyname}: #{$i + $unit}!important;
    }
    $i: $i + $offset;
  }
}
